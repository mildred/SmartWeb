package nquads

# http://www.w3.org/TR/n-quads/
# FIXME don't accept \x00 character in IRIREF

type NQuads Peg {
	NQuadsBase
}

nquadsDoc 	<- 	ws* statement? (EOL ws* statement?)* !.
statement 	<- 	subject predicate object graphLabel? "." { p.setStatement() } ws*
subject 	<- 	(IRIREF ws* / BLANK_NODE_LABEL ws*) { p.setSubject() }
predicate 	<- 	(IRIREF ws*) { p.setPredicate() }
object 		<- 	(IRIREF ws* / BLANK_NODE_LABEL ws* / literal) { p.setObject() }
graphLabel 	<- 	(IRIREF ws* / BLANK_NODE_LABEL ws*) { p.setGraph() }
literal 	<- 	STRING_LITERAL_QUOTE ws* ("^^" ws* IRIREF ws* / LANGTAG ws*)?

LANGTAG 		<- 	"@" <[a-zA-Z]+ ("-" [a-zA-Z0-9]+)*>{ p.setLangTag(buffer[begin:end]) }
EOL 			<- 	[\r\n]+
IRIREF 			<- 	'<' <([^\0x01-\0x20<>"{}|^`\\] / UCHAR)*>{ p.setIri(buffer[begin:end]) } '>'
STRING_LITERAL_QUOTE <- '"' <([^"\\\r\n] / ECHAR / UCHAR)*>{ p.setString(buffer[begin:end]) } '"'
BLANK_NODE_LABEL <-	'_:' <[^\t\r\n ]*>{ p.setBlank(buffer[begin:end]) }
UCHAR 			<-	'\\u' HEX HEX HEX HEX / '\\U' HEX HEX HEX HEX HEX HEX HEX HEX
ECHAR 			<-  "\\" [tbnrf"'\\]
HEX 			<- 	[0-9A-Fa-f]

spc <- [\t ]
ws  <- ( spc / comment )*
comment <- "#" [^\r\n]*
